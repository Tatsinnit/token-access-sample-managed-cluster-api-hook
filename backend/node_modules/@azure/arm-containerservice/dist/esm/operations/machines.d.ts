import type { PagedAsyncIterableIterator } from "@azure/core-paging";
import type { Machines } from "../operationsInterfaces/index.js";
import type { ContainerServiceClient } from "../containerServiceClient.js";
import type { Machine, MachinesListOptionalParams, MachinesGetOptionalParams, MachinesGetResponse } from "../models/index.js";
/** Class containing Machines operations. */
export declare class MachinesImpl implements Machines {
    private readonly client;
    /**
     * Initialize a new instance of the class Machines class.
     * @param client Reference to the service client
     */
    constructor(client: ContainerServiceClient);
    /**
     * Gets a list of machines in the specified agent pool.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param agentPoolName The name of the agent pool.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, resourceName: string, agentPoolName: string, options?: MachinesListOptionalParams): PagedAsyncIterableIterator<Machine>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Gets a list of machines in the specified agent pool.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param agentPoolName The name of the agent pool.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Get a specific machine in the specified agent pool.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param agentPoolName The name of the agent pool.
     * @param machineName host name of the machine
     * @param options The options parameters.
     */
    get(resourceGroupName: string, resourceName: string, agentPoolName: string, machineName: string, options?: MachinesGetOptionalParams): Promise<MachinesGetResponse>;
    /**
     * ListNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param agentPoolName The name of the agent pool.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=machines.d.ts.map