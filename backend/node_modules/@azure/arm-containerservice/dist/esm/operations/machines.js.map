{"version":3,"file":"machines.js","sourceRoot":"","sources":["../../../src/operations/machines.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport type { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport type { Machines } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport type { ContainerServiceClient } from \"../containerServiceClient.js\";\nimport type {\n  Machine,\n  MachinesListNextOptionalParams,\n  MachinesListOptionalParams,\n  MachinesListResponse,\n  MachinesGetOptionalParams,\n  MachinesGetResponse,\n  MachinesListNextResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Machines operations. */\nexport class MachinesImpl implements Machines {\n  private readonly client: ContainerServiceClient;\n\n  /**\n   * Initialize a new instance of the class Machines class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ContainerServiceClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of machines in the specified agent pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceName The name of the managed cluster resource.\n   * @param agentPoolName The name of the agent pool.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    resourceName: string,\n    agentPoolName: string,\n    options?: MachinesListOptionalParams,\n  ): PagedAsyncIterableIterator<Machine> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      resourceName,\n      agentPoolName,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          resourceName,\n          agentPoolName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    resourceName: string,\n    agentPoolName: string,\n    options?: MachinesListOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<Machine[]> {\n    let result: MachinesListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(\n        resourceGroupName,\n        resourceName,\n        agentPoolName,\n        options,\n      );\n      const page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        resourceName,\n        agentPoolName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      const page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    resourceName: string,\n    agentPoolName: string,\n    options?: MachinesListOptionalParams,\n  ): AsyncIterableIterator<Machine> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      resourceName,\n      agentPoolName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of machines in the specified agent pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceName The name of the managed cluster resource.\n   * @param agentPoolName The name of the agent pool.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    resourceName: string,\n    agentPoolName: string,\n    options?: MachinesListOptionalParams,\n  ): Promise<MachinesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, resourceName, agentPoolName, options },\n      listOperationSpec,\n    );\n  }\n\n  /**\n   * Get a specific machine in the specified agent pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceName The name of the managed cluster resource.\n   * @param agentPoolName The name of the agent pool.\n   * @param machineName host name of the machine\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    resourceName: string,\n    agentPoolName: string,\n    machineName: string,\n    options?: MachinesGetOptionalParams,\n  ): Promise<MachinesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, resourceName, agentPoolName, machineName, options },\n      getOperationSpec,\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceName The name of the managed cluster resource.\n   * @param agentPoolName The name of the agent pool.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    resourceName: string,\n    agentPoolName: string,\n    nextLink: string,\n    options?: MachinesListNextOptionalParams,\n  ): Promise<MachinesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, resourceName, agentPoolName, nextLink, options },\n      listNextOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/agentPools/{agentPoolName}/machines\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MachineListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.agentPoolName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/agentPools/{agentPoolName}/machines/{machineName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Machine,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.agentPoolName,\n    Parameters.machineName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MachineListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.nextLink,\n    Parameters.agentPoolName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n"]}