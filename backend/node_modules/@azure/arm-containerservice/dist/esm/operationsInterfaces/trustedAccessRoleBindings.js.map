{"version":3,"file":"trustedAccessRoleBindings.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/trustedAccessRoleBindings.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport type { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport type { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport type {\n  TrustedAccessRoleBinding,\n  TrustedAccessRoleBindingsListOptionalParams,\n  TrustedAccessRoleBindingsGetOptionalParams,\n  TrustedAccessRoleBindingsGetResponse,\n  TrustedAccessRoleBindingsCreateOrUpdateOptionalParams,\n  TrustedAccessRoleBindingsCreateOrUpdateResponse,\n  TrustedAccessRoleBindingsDeleteOptionalParams,\n  TrustedAccessRoleBindingsDeleteResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a TrustedAccessRoleBindings. */\nexport interface TrustedAccessRoleBindings {\n  /**\n   * List trusted access role bindings.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceName The name of the managed cluster resource.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: TrustedAccessRoleBindingsListOptionalParams,\n  ): PagedAsyncIterableIterator<TrustedAccessRoleBinding>;\n  /**\n   * Get a trusted access role binding.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceName The name of the managed cluster resource.\n   * @param trustedAccessRoleBindingName The name of trusted access role binding.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    resourceName: string,\n    trustedAccessRoleBindingName: string,\n    options?: TrustedAccessRoleBindingsGetOptionalParams,\n  ): Promise<TrustedAccessRoleBindingsGetResponse>;\n  /**\n   * Create or update a trusted access role binding\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceName The name of the managed cluster resource.\n   * @param trustedAccessRoleBindingName The name of trusted access role binding.\n   * @param trustedAccessRoleBinding A trusted access role binding\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    resourceName: string,\n    trustedAccessRoleBindingName: string,\n    trustedAccessRoleBinding: TrustedAccessRoleBinding,\n    options?: TrustedAccessRoleBindingsCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<TrustedAccessRoleBindingsCreateOrUpdateResponse>,\n      TrustedAccessRoleBindingsCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Create or update a trusted access role binding\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceName The name of the managed cluster resource.\n   * @param trustedAccessRoleBindingName The name of trusted access role binding.\n   * @param trustedAccessRoleBinding A trusted access role binding\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    resourceName: string,\n    trustedAccessRoleBindingName: string,\n    trustedAccessRoleBinding: TrustedAccessRoleBinding,\n    options?: TrustedAccessRoleBindingsCreateOrUpdateOptionalParams,\n  ): Promise<TrustedAccessRoleBindingsCreateOrUpdateResponse>;\n  /**\n   * Delete a trusted access role binding.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceName The name of the managed cluster resource.\n   * @param trustedAccessRoleBindingName The name of trusted access role binding.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    resourceName: string,\n    trustedAccessRoleBindingName: string,\n    options?: TrustedAccessRoleBindingsDeleteOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<TrustedAccessRoleBindingsDeleteResponse>,\n      TrustedAccessRoleBindingsDeleteResponse\n    >\n  >;\n  /**\n   * Delete a trusted access role binding.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceName The name of the managed cluster resource.\n   * @param trustedAccessRoleBindingName The name of trusted access role binding.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    resourceName: string,\n    trustedAccessRoleBindingName: string,\n    options?: TrustedAccessRoleBindingsDeleteOptionalParams,\n  ): Promise<TrustedAccessRoleBindingsDeleteResponse>;\n}\n"]}